{"version":3,"sources":["components/Header.js","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/Landing.js","components/CharacterDetail.js","App.js","services/characters.js","index.js"],"names":["Header","props","className","Filters","getQuery","query","htmlFor","id","type","onChange","value","placeholder","CharacterCard","image","name","species","src","alt","CharacterList","characters","filter","searched","toLowerCase","includes","map","chac","key","to","Landing","CharacterDetail","routerProps","charId","parseInt","match","params","character","item","length","status","origin","episode","App","state","bind","this","getCharacters","fetch","then","response","json","setState","results","event","userQuery","currentTarget","exact","path","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fb2bcaa2.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = props => {\n\treturn(\n\t\t<header className=\"app__header\">\n\t\t\t<h1 className=\"app__title\">rick and morty</h1>\n\t\t</header>\n\t);\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/Filters.css'\n\n\nconst Filters = props => {\n\tconst {getQuery, query} = props;\n\treturn(\n\t\t<div className=\"app__search\">\n\t\t\t<label htmlFor=\"query\"></label>\n\t\t\t<input className=\"app__input\"\n\t\t\t\tid = \"query\" \n\t\t\t\ttype=\"text\" \n\t\t\t\tonChange = {getQuery} \n\t\t\t\tvalue={query}\n\t\t\t\tplaceholder = \"Please, enter the name of the desired character\" />\t\n\t</div>\n\t);\n}\n\nFilters.propTypes = {\n\tgetQuery: PropTypes.func.isRequired,\n\tquery: PropTypes.string.isRequired\n}\nexport default Filters;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/CharacterCard.css';\n\nconst CharacterCard = props => {\n\tconst {image, name, species} = props;\n\treturn(\n\t\t<div className=\"character__card\">\n\t\t\t<div className=\"character__img\">\n\t\t\t\t<img src={image} alt={name}/>\n\t\t\t</div>\n\t\t\t<h2 className=\"chacracter__name\">{name}</h2>\n\t\t\t<h3 className=\"character__species\">{species} { }  \n\t\t\t\t {(species === 'Human') ? <i className=\"fas fa-restroom\"></i> : <i className=\"fab fa-reddit-alien\"></i>}\n\t\t\t</h3>\n\t\t</div>\n\t);\n}\n\nCharacterCard.propTypes = {\n\timage: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\tspecies: PropTypes.string.isRequired\n}\n\nexport default CharacterCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CharacterCard from './CharacterCard';\nimport {Link} from 'react-router-dom';\nimport '../css/CharacterList.css';\n\nconst CharacterList = props => {\n\tconst {characters, query} = props;\n\treturn(\n\t\t<ul className=\"characters__list\">\n\t\t\t{characters\n\t\t\t\t.filter(searched => searched.name.toLowerCase().includes(query.toLowerCase()))\n\t\t\t\t.map( chac => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li className=\"character\" key={chac.id}>\n\t\t\t\t\t\t\t<Link to={`/detail/${chac.id}`} className=\"character__link\">\n\t\t\t\t\t\t\t\t<CharacterCard \n\t\t\t\t\t\t\t\t\timage = {chac.image}\n\t\t\t\t\t\t\t\t\tname = {chac.name}\n\t\t\t\t\t\t\t\t\tspecies = {chac.species}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t})}\n\t</ul>\n\t);\n}\nCharacterList.propTypes = {\n\tcharacters: PropTypes.arrayOf(PropTypes.object).isRequired,\n\tquery: PropTypes.string.isRequired\n}\nexport default CharacterList;","import React from 'react';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport PropTypes from 'prop-types';\nimport '../css/Landing.css';\n\nconst Landing = props => {\n\n\tconst {getQuery, query, characters} = props;\n\n\treturn(\n\t\t<main className=\"app__main\">\n\t\t\t<Filters \n\t\t\t\tgetQuery = {getQuery}\n\t\t\t\tquery = {query}\t\n\t\t\t/>\n\t\t\t<CharacterList\n\t\t\t\tcharacters = {characters} \n\t\t\t\tquery = {query}\n\t\t\t/>\n\t\t</main>\n\t);\n}\n\nLanding.propTypes = {\n\tcharacters: PropTypes.arrayOf(PropTypes.object).isRequired,\n\tgetQuery: PropTypes.func.isRequired,\n\tquery: PropTypes.string.isRequired\n}\n\nexport default Landing;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom'\nimport '../css/CharacterDetail.css';\n\nconst CharacterDetail = props => {\n\t\n\tconst {routerProps, characters} = props;\n\tconst charId = parseInt(routerProps.match.params.charId);\n\tconst character = characters.filter(item => item.id === charId);\n\n\tif (charId > characters.length) {\n\t\treturn (\n\t\t\t<div className=\"detail__box\">\n\t\t\t\t<Link to =\"/\" className=\"app__go-back\">{`< back`}</Link>\n\t\t\t\t<p className=\"error_message\">Actualmente sólo hay 20 personajes.</p>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (character[0]) {\n\t\tconst {image, name, status, origin, episode} = character[0];\n\t\treturn(\n\t\t\t<div className=\"detail__box\">\n\t\t\t\t<Link to =\"/\" className=\"app__go-back\">{`< back`}</Link>\n\t\t\t\t<div className=\"character__detail\">\n\t\t\t\t\t<div className=\"detail__image\">\n\t\t\t\t\t\t<img src={image} alt={name} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<h2 className=\"detail__name\">{name}</h2>\n\n\t\t\t\t\t<p className=\"detail__status\"><strong>Status:</strong> {(status === 'Dead') ? <i className=\"fas fa-skull-crossbones\"></i> : `${status}`}</p>\n\n\t\t\t\t\t<p className=\"detail__origin\"><strong>Origin:</strong> {origin.name}</p>\n\t\t\t\t\t<p className=\"detail_episodes\"><strong>Episodes:</strong> {episode.length}</p>\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t);\n\t} else {\n\n\t}\n\treturn(\n\t\t<div className=\"detail__box\">\n\t\t\t<Link to =\"/\" className=\"app__go-back\">{`< back`}</Link>\n\t\t\t<p className=\"error_message\"> Ese personaje no está actualmente registrado</p>\n\t\t</div>\t\n\t);\n}\n\nCharacterDetail.propTypes = {\n\trouterProps: PropTypes.object.isRequired,\n\tcharacters: PropTypes.arrayOf(PropTypes.object).isRequired\n}\n\nexport default CharacterDetail;","import React from 'react';\nimport {fetchCharacters} from './services/characters';\nimport Header from './components/Header';\nimport Landing from './components/Landing';\nimport CharacterDetail from './components/CharacterDetail';\nimport {Route, Switch} from 'react-router-dom';\n\nimport './App.css';\nimport './css/Header.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n\t\tthis.state = {\n\t\t\tcharacters: [],\n\t\t\tquery: ''\n\t\t}\n\n\t\tthis.getQuery = this.getQuery.bind(this);\n  }\n\n\tcomponentDidMount() {\n\t\tthis.getCharacters();\n\t}\n\n\tgetCharacters() {\n\t\tfetchCharacters()\n\t\t.then(characters => {\n\t\t\tthis.setState({\n\t\t\t\tcharacters: characters.results\n\t\t\t})\n\t\t})\n\t}\n\n\tgetQuery(event){\n\t\tconst userQuery = event.currentTarget.value;\n\t\tthis.setState({\n\t\t\tquery: userQuery\n\t\t})\n\t}\n\n  render() {\n\t\tconst {characters, query} = this.state;\n    return (\n      <div className=\"app\">\n\t\t\t\t<Header />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" render={() => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t<Landing \n\t\t\t\t\t\t\tgetQuery = {this.getQuery}\n\t\t\t\t\t\t\tcharacters = {characters}\n\t\t\t\t\t\t\tquery = {query}\n\t\t\t\t\t  />\n\t\t\t\t\t\t);\n\t\t\t\t\t}}/>\n\n\t\t\t\t\t<Route path=\"/detail/:charId\" render={(routerProps) => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t<CharacterDetail\n\t\t\t\t\t\t\trouterProps = {routerProps} \n\t\t\t\t\t\t\tcharacters = {characters}\n\t\t\t\t\t  />\n\t\t\t\t\t\t);\n\t\t\t\t\t}}/>\n\t\t\t\t</Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;","const ENDPOINT = 'https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json';\n\nconst fetchCharacters = () => fetch(ENDPOINT)\n.then(response => response.json())\n\nexport {fetchCharacters};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));"],"sourceRoot":""}